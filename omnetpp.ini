[General]
network = ClusterAlgNetwork
num-rngs = 3
**.mobility.rng-0 = 1
**.wlan[*].mac.rng-0 = 2
sim-time-limit = 200s
**.maxLeaderRepeats = 0

#interferenceRange - problem in aodv - very slow simulation
#**.rangeFilter = "interferenceRange"
**.rangeFilter = "communicationRange"

# channel physical parameters
#**.wlan[*].typename = "AckingWirelessInterface"
**.wlan[*].typename = "EnhancedWirelessInterface"

**.wlan[*].bitrate = 2Mbps
**.wlan[*].mac.headerLength = 23B
**.wlan[*].radio.typename = "UnitDiskRadio"
**.wlan[*].radio.transmitter.headerLength = 96b

**.wlan[*].radio.transmitter.communicationRange = 250m
**.wlan[*].radio.transmitter.detectionRange = 260m
**.wlan[*].radio.transmitter.interferenceRange = 270m

#
#**.wlan[*].radio.transmitter.communicationRange = 45m
#**.wlan[*].radio.transmitter.detectionRange = 55m
#**.wlan[*].radio.transmitter.interferenceRange = 70m


**.topologyControlSignal.result-recording-modes = count,vector
**.helloNum.result-recording-modes = count,vector
**.topologyControlNum.result-recording-modes = count,vector
**.stateChangedNum.result-recording-modes = count,vector
**.clusterDestroyedNum.result-recording-modes = count,vector
**.messageSendNum.result-recording-modes = count,vector
**.messageTransferedNum.result-recording-modes = count,vector
**.messageReceivedNum.result-recording-modes = count,vector
**.result-recording-modes = -


**.wlan[*].radio.receiver.ignoreInterference = true
*.numHosts = 4


# mobility
**.host[*].mobility.initFromDisplayString = false
**.host[*].mobility.typename = "StationaryMobility"
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMinY = 0m
**.mobility.constraintAreaMaxX = 600m
**.mobility.constraintAreaMaxY = 600m

# lifecycle
**.hasStatus = true

########################################################### visualization
[Config Visualization]
description = add visualization
*.host[*].wlan[*].radio.displayCommunicationRange = true
#*.host*.wlan[*].radio.displayInterferenceRange = true

*.visualizer.*.mediumVisualizer.displaySignals = true

*.visualizer.*.mediumVisualizer.signalRingCount = 10
*.visualizer.*.mediumVisualizer.signalRingSize = 5m
*.visualizer.*.mediumVisualizer.signalFadingDistance = 10m
*.visualizer.*.mediumVisualizer.signalFadingFactor = 1.5

*.visualizer.*.mediumVisualizer.signalWaveCount = 20
*.visualizer.*.mediumVisualizer.signalWaveLength = 5m
*.visualizer.*.mediumVisualizer.signalWaveWidth = 5m

*.visualizer.*.physicalLinkVisualizer.displayLinks = true
*.visualizer.*.dataLinkVisualizer.displayLinks = true
*.visualizer.*.networkRouteVisualizer.displayRoutes = true
*.visualizer.*.*LinkVisualizer.lineShift = 0
*.visualizer.*.networkRouteVisualizer.lineShift = 0


# Movement trail settings
*.visualizer.*.mobilityVisualizer.displayMovementTrails = true
*.visualizer.*.mobilityVisualizer.trailLength = 10
# Velocity vector settings
*.visualizer.*.mobilityVisualizer.displayVelocities = true
# Orientation settings
*.visualizer.*.mobilityVisualizer.displayOrientations = true


########################################################### distance
[Config RealisticRadioModel] 
description = use apsk scalar radio medium

*.host*.wlan[*].typename = "WirelessInterface"
*.host*.wlan[*].mac.typename = "CsmaCaMac"
*.host*.wlan[*].mac.ackTimeout = 300us
*.host*.wlan[*].mac.useAck = true

*.radioMedium.typename = "ApskScalarRadioMedium"
#*.radioMedium.typename = "UnitDiskRadioMedium"
*.radioMedium.backgroundNoise.power = -90dBm
*.radioMedium.mediumLimitCache.centerFrequency = 2GHz

*.host*.wlan[*].radio.typename = "ApskScalarRadio"
#*.host*.wlan[*].radio.typename = "UnitDiskRadio"
*.host*.wlan[*].radio.centerFrequency = 2GHz
*.host*.wlan[*].radio.bandwidth = 2MHz
*.host*.wlan[*].radio.transmitter.power = 1.4mW
*.host*.wlan[*].radio.transmitter.preambleDuration = 10us
*.host*.wlan[*].radio.transmitter.headerLength = 8B
*.host*.wlan[*].radio.receiver.sensitivity = -85dBm
*.host*.wlan[*].radio.receiver.energyDetection = -85dBm
*.host*.wlan[*].radio.receiver.snirThreshold = 4dB


########################################################### Visualization, distance <- Visualization
[Config BiggerDistance]
description = increased communication distance
extends = Visualization
#extends = RealisticRadioModel

**.transmitter.communicationRange = 100m
**.transmitter.interferenceRange = 120m
**.wlan[*].radio.transmitter.detectionRange = 110m
**.rangeFilter = "interferenceRange" 

*.visualizer.*.mediumVisualizer.signalRingCount = 20
*.visualizer.*.mediumVisualizer.signalRingSize = 5m
*.visualizer.*.mediumVisualizer.signalFadingDistance = 20m
*.visualizer.*.mediumVisualizer.signalFadingFactor = 1.5

*.visualizer.*.mediumVisualizer.signalWaveCount = 20
*.visualizer.*.mediumVisualizer.signalWaveLength = 5m
*.visualizer.*.mediumVisualizer.signalWaveWidth = 5m


########################################################### Mobility <- Visualization
[Config Mobility]
description = low speed mobile nodes
extends = Visualization

**.host[*].mobility.typename = "MassMobility"
**.host[*].mobility.changeInterval = normal(5s, 0.1s)
**.host[*].mobility.angleDelta = normal(0deg, 30deg)
**.host[*].mobility.speed = normal(1.5mps, 0.5mps)


########################################################### Mobility <- Visualization
[Config FastMobility]
description = fast speed mobile nodes
extends = Visualization

**.host[*].mobility.typename = "MassMobility"
**.host[*].mobility.changeInterval = normal(1s, 0.1s)
**.host[*].mobility.angleDelta = normal(0deg, 45deg)
**.host[*].mobility.speed = normal(10.5mps, 5.5mps)


########################################################### Mobility <- Visualization
[Config Mesh]
extends = Visualization
description = Static Grid Mobility

*.*host[*].mobility.typename = "StaticGridMobility"
**.mobility.constraintAreaMaxX = 320m
**.mobility.constraintAreaMaxY = 320m
*.*host[*].mobility.numHosts = 25
*.numHosts = 25
*.host[*].wlan[*].radio.displayCommunicationRange = false


########################################################### pingOne
[Config PingOne]
description = First node ping all other nodes
*.host[0].numApps = 1
*.host[0].app[0].typename = "RandomOrderPingApp"
*.host[0].app[0].startTime = uniform(20s,25s)
*.host[0].app[0].printPing = true
*.host[0].app[0].continuous = true
*.host[0].app[0].destAddr = "*"

*.host[0].app[0].count = 5
*.host[0].app[0].sendInterval = 1s  # time to wait between pings (can be random)
*.host[0].app[0].sleepDuration = 3s  # time spent in sleep between switching destinations

**.app[0].**.result-recording-modes = all

[Config PingOneConsole]
extends = PingOne
repeat = 5

########################################################### pingAll
[Config PingAllToAll]
description = Each node ping all other nodes

*.host[*].numApps = 1
*.host[*].app[0].typename = "RandomOrderPingApp"
*.host[*].app[0].startTime = uniform(20s,25s)
*.host[*].app[0].printPing = true
*.host[*].app[0].continuous = true

*.host[*].app[0].destAddr = "*"
*.host[*].app[0].count = 5
*.host[*].app[0].sendInterval = 1s  # time to wait between pings (can be random)
*.host[*].app[0].sleepDuration = 3s  # time spent in sleep between switching destinations

**.app[0].**.result-recording-modes = all


########################################################### Circle Mobility <- Visualization
[Config Circle]
extends = Visualization
description = Circle Mobility

*.host[*].mobility.typename = "CircleMobility"
*.numHosts = 16

*.host[..8].mobility.cx = 200m
*.host[..8].mobility.cy = 200m
*.host[..8].mobility.r = 80m
*.host[..8].mobility.speed = 1.50mps
*.host[..8].mobility.startAngle = replaceUnit(360 * parentIndex() / 8, "deg")

*.host[8..].mobility.cx = 200m
*.host[8..].mobility.cy = 200m
*.host[8..].mobility.r = 150m
*.host[8..].mobility.speed = -1.50mps
*.host[8..].mobility.startAngle = replaceUnit(360 * parentIndex() / 8, "deg")

# Movement trail settings
*.visualizer.*.mobilityVisualizer.displayMovementTrails = true
*.visualizer.*.mobilityVisualizer.trailLength = 100
*.visualizer.*.mobilityVisualizer.displayVelocities = false
*.host[*].wlan[*].radio.displayCommunicationRange = false


########################################################### Big Circle Mobility <- Circle Mobility
[Config BigCircle]
extends = Circle
description = Circle Mobility with huge number of nodes

*.numHosts = 100

*.host[..50].mobility.cx = 300m
*.host[..50].mobility.cy = 300m
*.host[..50].mobility.r = 180m
*.host[..50].mobility.speed = 1.50mps

*.host[50..].mobility.cx = 300m
*.host[50..].mobility.cy = 300m
*.host[50..].mobility.r = 210m
*.host[50..].mobility.speed = -1.50mps


########################################################### batch parameters
[Config cmdBase]
extends = PingAllToAll, Visualization
description = Cmd envioremnet config

repeat = 8
*.numHosts = ${numHostP = 50, 100, 200}
**.displayCommunicationRange = false
*.host[*].typename = "ClusterAlgRouter"
**.maxLeaderRepeats = 5

*.host[*].mobility.typename = "CircleMobility"
*.host[*].mobility.cx = 300m
*.host[*].mobility.cy = 300m
*.host[*].mobility.r = (parentIndex() < (${numHostP} / 2))? 180m : 190m
*.host[*].mobility.speed = replaceUnit( ((parentIndex() < (${numHostP} / 2))? 1 : -1) * 5, "kmph")
*.host[*].mobility.startAngle = replaceUnit(360 / (${numHostP} / 2) * parentIndex(), "deg")

####################
[Config paramHost]
extends = cmdBase
*.host[*].typename = ${routerNameP="ClusterAlgRouter", "AodvRouter", "DsdvRouter", "DymoRouter"}

####################
[Config paramLeaderRepeats]
extends = paramHost
description = XXXXXXXXXXXXXXXX
description = leaderRepeatsP is ClusterAlgRouter parameter only
**.maxLeaderRepeats = ${leaderRepeatsP=0, 5, 10, 15, 20}
constraint = (${routerNameP} == "ClusterAlgRouter" || ${leaderRepeatsP} == 0)

####################
[Config paramSpeed]
extends = cmdBase
description = XXXXXXXXXXXXXXXX
*.host[*].mobility.speed = replaceUnit( ((parentIndex() < (${numHostP} / 2))? 1 : -1) * (${speedP=5, 10, 15, 20}), "kmph")

####################
[Config paramRange]
extends = cmdBase
**.wlan[*].radio.transmitter.communicationRange = replaceUnit( ${rangeP=45, 100, 250}, "m")
**.wlan[*].radio.transmitter.detectionRange = replaceUnit( ${55, 110, 270 ! rangeP}, "m")
**.wlan[*].radio.transmitter.interferenceRange = replaceUnit( ${70, 125, 300 ! rangeP}, "m")

#################### ###+
[Config paramRadius]
extends = paramRange
description = XXXXXXXXXXXXXXXX
.a = ${radiusSmallP=50, 180, 200 ! rangeP}
.b = ${radiusBigP=70, 200, 400 ! rangeP}
*.host[*].mobility.r = replaceUnit( ((parentIndex() < (${numHostP} / 2))? ${radiusSmallP} : ${radiusBigP}), "m")
*.host[*].mobility.cx = 450m
*.host[*].mobility.cy = 450m
**.mobility.constraintAreaMaxX = 900m
**.mobility.constraintAreaMaxY = 900m

#################### ###+
[Config cmdSimRandomWaypointModel]
extends = cmdBase
description = XXXXXXXXXXXXXXXX
*.host[*].mobility.typename = "LinearMobility"
**.mobility.speed = 5kmph
**.mobility.constraintAreaMaxX = replaceUnit(sqrt(${numHostP}) * (${densityP=20,25,30}), "m")
**.mobility.constraintAreaMaxY = replaceUnit(sqrt(${numHostP}) * (${densityP}), "m")

####################
[Config cmdParamHello]
extends = cmdBase
**.helloInterval = replaceUnit( ${helloP=2, 4, 6}, "s")

####################
[Config cmdTcInterval]
extends = cmdBase
**.tcInterval = replaceUnit( ${tcP=4, 7, 10}, "s")

####################
[Config cmdTcRouteLifetime]
extends = cmdBase
**.routeLifetime = replaceUnit( ${rltP=8, 11, 14}, "s")


#################### ###+
[Config cmdTimeParam]
description = XXXXXXXXXXXXXXXX
extends = cmdTcRouteLifetime,cmdTcInterval,cmdParamHello

